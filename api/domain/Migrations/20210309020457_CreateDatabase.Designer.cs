// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using domain;

namespace domain.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210309020457_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("domain.model.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanHaveMultiple")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TimeOfDayId")
                        .HasColumnType("int");

                    b.HasKey("DishId");

                    b.HasIndex("TimeOfDayId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            CanHaveMultiple = false,
                            Name = "eggs",
                            Number = 1,
                            TimeOfDayId = 1
                        },
                        new
                        {
                            DishId = 2,
                            CanHaveMultiple = false,
                            Name = "toast",
                            Number = 2,
                            TimeOfDayId = 1
                        },
                        new
                        {
                            DishId = 3,
                            CanHaveMultiple = true,
                            Name = "coffee",
                            Number = 3,
                            TimeOfDayId = 1
                        },
                        new
                        {
                            DishId = 4,
                            CanHaveMultiple = false,
                            Name = "steak",
                            Number = 1,
                            TimeOfDayId = 2
                        },
                        new
                        {
                            DishId = 5,
                            CanHaveMultiple = true,
                            Name = "potato",
                            Number = 2,
                            TimeOfDayId = 2
                        },
                        new
                        {
                            DishId = 6,
                            CanHaveMultiple = false,
                            Name = "wine",
                            Number = 3,
                            TimeOfDayId = 2
                        },
                        new
                        {
                            DishId = 7,
                            CanHaveMultiple = false,
                            Name = "cake",
                            Number = 4,
                            TimeOfDayId = 2
                        });
                });

            modelBuilder.Entity("domain.model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("domain.model.OrderDish", b =>
                {
                    b.Property<int>("OrderDishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("OrderDishId");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDishes");
                });

            modelBuilder.Entity("domain.model.TimeOfDay", b =>
                {
                    b.Property<int>("TimeOfDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TimeOfDayId");

                    b.ToTable("TimeOfDays");

                    b.HasData(
                        new
                        {
                            TimeOfDayId = 1,
                            Name = "morning"
                        },
                        new
                        {
                            TimeOfDayId = 2,
                            Name = "night"
                        });
                });

            modelBuilder.Entity("domain.model.Dish", b =>
                {
                    b.HasOne("domain.model.TimeOfDay", "TimeOfDay")
                        .WithMany()
                        .HasForeignKey("TimeOfDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeOfDay");
                });

            modelBuilder.Entity("domain.model.OrderDish", b =>
                {
                    b.HasOne("domain.model.Dish", "Dish")
                        .WithMany("Orders")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.model.Order", "Order")
                        .WithMany("Dishes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("domain.model.Dish", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("domain.model.Order", b =>
                {
                    b.Navigation("Dishes");
                });
#pragma warning restore 612, 618
        }
    }
}
